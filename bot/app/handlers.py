from telegram import Update
from telegram.ext import CommandHandler, MessageHandler, filters
import aiohttp
from app.config import Config
from loguru import logger

API_URL = f"http://localhost"


async def send_table(update: Update, data: list, is_brands: bool):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –≤–∏–¥–µ —Ç–∞–±–ª–∏—Ü—ã."""
    if not data:
        await update.message.reply_text("‚ùå –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        return

    header = "üèÜ –¢–û–ü –ë–†–ï–ù–î–û–í üèÜ" if is_brands else "üçè –¢–û–ü –í–ö–£–°–û–í üçè"
    rows = []
    for i, item in enumerate(data, 1):
        if is_brands:
            row = f"{i}. *{item['–ë—Ä–µ–Ω–¥']}* \n –ù–∞–∑–≤–∞–Ω–∏–µ –≤–∫—É—Å–∞: `{item['–ù–∞–∑–≤–∞–Ω–∏–µ_–≤–∫—É—Å–∞']}` \n  –†–µ–π—Ç–∏–Ω–≥: `{item['–†–µ–π—Ç–∏–Ω–≥']}`"
        else:
            row = f"{i}. *{item['–í–∫—É—Å']}* \n   –ë—Ä–µ–Ω–¥: `{item['–ë—Ä–µ–Ω–¥']}` \n –ù–∞–∑–≤–∞–Ω–∏–µ –≤–∫—É—Å–∞: `{item['–ù–∞–∑–≤–∞–Ω–∏–µ_–≤–∫—É—Å–∞']}` \n  –†–µ–π—Ç–∏–Ω–≥: `{item['–†–µ–π—Ç–∏–Ω–≥']}`"
        rows.append(row)
    
    await update.message.reply_text(
        f"{header}\n" + "\n".join(rows),
        parse_mode="Markdown"
    )


async def handle_query(update: Update, _):
    query = update.message.text.strip()
    logger.info(f"–ó–∞–ø—Ä–æ—Å: {query}")
    
    async with aiohttp.ClientSession(trust_env=True) as session:
        try:
            # –ü—Ä–æ–±—É–µ–º –∫–∞–∫ –≤–∫—É—Å
            async with session.get(f"{API_URL}/brands/{query}", ssl=False) as resp:
                if resp.status == 200:
                    await send_table(update, await resp.json(), is_brands=True)
                    return
            
            # –ü—Ä–æ–±—É–µ–º –∫–∞–∫ –±—Ä–µ–Ω–¥
            async with session.get(f"{API_URL}/flavors/{query}") as resp:
                if resp.status == 200:
                    await send_table(update, await resp.json(), is_brands=False)
                    return
            
            await update.message.reply_text("üîç –ù–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –±—Ä–µ–Ω–¥–æ–≤, –Ω–∏ –≤–∫—É—Å–æ–≤")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞: {e}")
            await update.message.reply_text("‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞")


def setup_handlers(app):
    app.add_handler(CommandHandler("start", lambda u, _: u.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –±—Ä–µ–Ω–¥ –∏–ª–∏ –≤–∫—É—Å")))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_query))